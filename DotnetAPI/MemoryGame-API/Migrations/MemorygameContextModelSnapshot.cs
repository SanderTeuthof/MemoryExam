// <auto-generated />
using MemoryGame_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MemoryGame_API.Migrations
{
    [DbContext(typeof(MemorygameContext))]
    partial class MemorygameContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("image_data");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("image_name");

                    b.HasKey("Id");

                    b.HasIndex("ImageName")
                        .IsUnique();

                    b.ToTable("memoryimages", (string)null);
                });

            modelBuilder.Entity("MemoryGame_API.Models.ResetGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ResetPlayer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("reset_player");

                    b.Property<string>("ResetTime")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("reset_time");

                    b.HasKey("Id");

                    b.ToTable("resetgame", (string)null);
                });

            modelBuilder.Entity("Names", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name1")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name1");

                    b.Property<string>("Name2")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("name2");

                    b.HasKey("Id");

                    b.ToTable("names", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
